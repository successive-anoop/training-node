version: '3'

services:
  # Name of the service
  express-ts-boilerplate:
    build:
      context: .
    volumes:
      # Mounts the project directory on the host to /app inside the container,
      # allowing you to modify the code without having to rebuild the image.
      - .:/app
      # Just specify a path and let the Engine create a volume.
      # Data present in the base image at the specified mount point will be copied
      # over to the new volume upon volume initialization.
      # node_modules from this new volume will be used and not from your local dev env.
      - /app/node_modules/

    # Expose ports [HOST:CONTAINER}
    ports:
      - "9000:9000"

    # Set environment variables from this file
    env_file:
      - .env

    container_name: "express-ts-boilerplate"

    # Overwrite any env var defined in .env file (if required)

    # Link to containers in another service.
    # Links also express dependency between services in the same way as depends_on,
    # so they determine the order of service startup.

    networks:
      - nodexperts

  mongodb:
    image: mongo:3.4-jessie
    container_name: "node-mongodb"
    volumes:
      - ./data/db:/data/db
    ports:
        - 27017:27017
    command: mongod --smallfiles --logpath=/dev/null # --quiet

    env_file:
      .env

    networks:
      - nodexperts

networks:
  nodexperts:
    external: true
